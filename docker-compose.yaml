services:

  api:
    image: node
    working_dir: /api
    entrypoint: npm run $API_COMMAND
    restart: always
    environment:
      SECRET: $SECRET
      STRIPE_API_KEY: $STRIPE_API_KEY
      MYSQL_PASSWORD: $MYSQL_PASSWORD
      MYSQL_USER: api_user
      MYSQL_HOST: db
      EMAIL: $EMAIL
      EMAIL_PASSWORD: $EMAIL_PASSWORD
      EMAIL_SERVICE: $EMAIL_SERVICE
      FRONTEND_ORIGIN: $FRONTEND_ORIGIN
      BACKEND_ORIGIN: $BACKEND_ORIGIN
      API_COMMAND: $API_COMMAND
    ports:
      - 8080:8080
    volumes:
      - ./api:/api
      - uploads:/uploads
      - certs:/certs
    depends_on:
      - db

  db:
    image: mysql
    restart: always
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: yes
      MYSQL_DATABASE: shop_stack
      MYSQL_USER: api_user
      MYSQL_PASSWORD: $MYSQL_PASSWORD
    volumes:
      - data:/var/lib/mysql
      - ./db:/docker-entrypoint-initdb.d

  certbot:
    image: certbot/certbot
    volumes:
      - certs:/etc/letsencrypt
    ports:
      - 80:80
    entrypoint: |
      sh -c "
        if [ ${API_COMMAND} = dev ]; then
          exit 0
        fi

        trap exit TERM
        while true; do
          certbot certonly \\
            --standalone \\
            --preferred-challenges http \\
            --email ${EMAIL} \\
            --agree-tos \\
            --no-eff-email \\
            -d ${BACKEND_DOMAIN}
          sleep 12h & wait $${!}
        done
      "

volumes:
  data:
  uploads:
  certs:
